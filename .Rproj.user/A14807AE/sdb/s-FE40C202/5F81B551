{
    "contents" : "---\ntitle: \"Reproducible Research Peer Assessment 1\"\noutput: html_document\n---\n\nactivity.csv is assumed to be in the working directory.  The file is read and the total steps on each recorded day is found.\n\n```{r}\n  activity <- read.csv(\"activity.csv\")\n  daySteps <- as.numeric(aggregate(steps ~ date, data = activity,FUN = sum)[,2])\n  hist(daySteps,breaks=25,xlim=c(0,25000),main=\"Total Steps Taken in a Day\",ylab=\"Days\",xlab =\"Steps\")  \n```\n\nThe median number of steps taken per day is `r options(scipen=999);median(daySteps)` steps.  The mean number of steps taken per day is `r round(mean(daySteps),1)` steps.\n\nNext, we determine the average daily pattern.\n```{r}\n  require(lattice)\n  aveStepsInt <- as.data.frame(aggregate(steps ~ interval, data = activity,FUN = mean))\n  aveStepsInt$time <- paste(floor(aveStepsInt$interval/100),aveStepsInt$interval %% 100,sep=\":\")\n  aveStepsInt$time <- as.POSIXct(aveStepsInt$time,format=\"%H:%M\")\n  xyplot(steps ~ interval,data=aveStepsInt,type=\"l\",xlab=\"Time Interval\", ylab=\"Steps\",main=\"Average Number of Steps by Time Interval\")  \n```\n\nThe 5-minute interval on average that contains the maximum number of steps is `r format(aveStepsInt[aveStepsInt$steps == max(aveStepsInt$steps),3],\"%H:%M\")` .  That is, the subjects appear to be most active in the mid-morning.\n\nThe total number of missing values in the dataset is `r sum(rowSums(is.na(activity)>0))`.\n\nNext, find the median by both interval and date.  Median is chosen as the measure of center since it is more robust than the mean and best represents the steps taken in an average time period.\n```{r} \n  ##Find the mean for each interval and verify that all intervals are non-empty\n  aggInterval <- aggregate(data=activity,steps~interval,FUN='median')\n  length(aggInterval$steps) == length(aveStepsInt$time)\n\n  ##Find the mean for each date and discover that several dates are not represented\n  aggDate <- aggregate(data=activity,steps~date,FUN='median')\n  length(aggDate$steps) == 31 + 30\n```\nNote, all interval time periods have at least one complete record.  Next, activityMerge is defined as a new dataset that is equal to the original dataset with the median interval data replacing the empty step values.  \n```{r}\n  activityMerge <- merge(x=activity,y=aggInterval, by='interval')\n  colnames(activityMerge) <- c(\"interval\",\"steps.Raw\",\"date\",\"median\")\n  activityMerge$steps[is.na(activityMerge$steps.Raw)] <- activityMerge$median[is.na(activityMerge$steps.Raw)]\n  activityMerge <- activityMerge[,c(5,3,1)]\n```\nTotal number of steps taken each day is now found with the imputed values\n```{r}\n  dayStepsMerge <- as.numeric(aggregate(steps ~ date, data = activityMerge,FUN = sum)[,2])\n  hist(dayStepsMerge,breaks=25,xlim=c(0,25000),main=\"Total Steps Taken in a Day (Some Values Imputed)\",ylab=\"Days\",xlab =\"Steps\")\n```\n\nThe median number of steps taken per day is `r median(dayStepsMerge)` steps.  The mean number of steps taken per day is `r round(mean(dayStepsMerge),1)` steps.  When compared to the original data, imputating missing values by the median of the time interval causes a decrease of `r round(100 - median(dayStepsMerge)/median(daySteps)*100) `% in the median and `r round(100-mean(dayStepsMerge)/mean(daySteps)*100) `% in the mean. \n\n```{r}\n  activityMerge$WeekendOrWeekday[weekdays(as.Date(activityMerge$date,format=\"%Y-%m-%d\")) == \"Saturday\" | weekdays(as.Date(activityMerge$date,format=\"%Y-%m-%d\")) == \"Sunday\"] <- \"Weekend\"\n  activityMerge$WeekendOrWeekday[is.na(activityMerge$WeekendOrWeekday)] <- \"Weekday\"\n  aveStepsIntMerge <- as.data.frame(aggregate(steps ~ interval + WeekendOrWeekday, data = activityMerge,FUN = mean))  \n  xyplot(steps ~ interval | WeekendOrWeekday,data=aveStepsIntMerge,type=\"l\",xlab=\"Time Interval\", ylab=\"Steps\", main=\"Average Number of Steps by Time Interval (Some Values Imputed)\")\n```",
    "created" : 1420694791874.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "209527705",
    "id" : "5F81B551",
    "lastKnownWriteTime" : 1420698056,
    "path" : "~/Data_mining/ReproducibleResearch/PA1-template.Rmd",
    "project_path" : "PA1-template.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}